package com.jolo.countsdk.dao;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import com.jolo.countsdk.net.bean.InstallPkg;import java.util.ArrayList;import java.util.List;/** * Description: dao * Created by dzq on 2016/10/18. */public class AdvMsgListDao {    private AdvSdkSqlHelper helper;    private SQLiteDatabase wd;    private SQLiteDatabase rd;    public AdvMsgListDao(Context context) {        helper = AdvSdkSqlHelper.getInstance(context, AdvListDBInfo.DB_NAME, AdvListDBInfo.INIT_VERSION);    }    public void openDatabase() {        wd = helper.getWritableDatabase();        rd = helper.getReadableDatabase();    }    public void closeDatabase() {        if (wd.isOpen()) {            wd.close();        }        if (rd.isOpen()) {            rd.close();        }    }    public void add2InstalledPkg(List<InstallPkg> list) {        wd = helper.getWritableDatabase();        if (wd.isOpen()) {            ContentValues values;            for (InstallPkg pkg : list) {                values = new ContentValues();                values.put(AdvListDBInfo.COLUMN_PKG_NAME, pkg.getPkgName());                values.put(AdvListDBInfo.COLUMN_VERSION_NAME, pkg.getVersionName());                values.put(AdvListDBInfo.COLUMN_VERSION_CODE, pkg.getVersionCode());                values.put(AdvListDBInfo.COLUMN_IS_MARK, markFalse);                wd.insert(AdvListDBInfo.TABLE_INSTALLED_PKG, null, values);            }        }    }    private static final int markTrue = 1;    private static final int markFalse = -1;    public List<InstallPkg> get20Pkgs() {        rd = helper.getReadableDatabase();        List<InstallPkg> list = null;        if (rd.isOpen()) {            list = new ArrayList<>();            String sql = "SELECT * FROM " + AdvListDBInfo.TABLE_INSTALLED_PKG + " WHERE " + AdvListDBInfo.COLUMN_IS_MARK                    + " = " + markFalse + " LIMIT 20";            Cursor cursor = rd.rawQuery(sql, null);            InstallPkg pkg;            while (cursor.moveToNext()) {                pkg = new InstallPkg();                pkg.setPkgName(cursor.getString(1));                pkg.setVersionName(cursor.getString(2));                pkg.setVersionCode(cursor.getInt(3));                list.add(pkg);            }            cursor.close();        }        return list;    }    public void updatePkgMark(List<InstallPkg> pkgs){        wd = helper.getWritableDatabase();        for (InstallPkg pkg : pkgs) {            ContentValues values = new ContentValues();            values.put(AdvListDBInfo.COLUMN_IS_MARK, markTrue);            wd.update(AdvListDBInfo.TABLE_INSTALLED_PKG, values, AdvListDBInfo.COLUMN_PKG_NAME+"=?",new String[]{pkg.getPkgName()});        }    }}